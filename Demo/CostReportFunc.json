{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "metadata": {
    "_generator": {
      "name": "bicep",
      "version": "0.16.1.55165",
      "templateHash": "10118622580117576362"
    }
  },
  "parameters": {
    "appName": {
      "type": "string",
      "defaultValue": "[format('costapp{0}', uniqueString(resourceGroup().id))]",
      "maxLength": 20,
      "metadata": {
        "description": "The base app name for the resources."
      }
    },
    "storageAccountName": {
      "type": "string",
      "defaultValue": "[format('{0}stg', parameters('appName'))]",
      "maxLength": 24,
      "metadata": {
        "description": "Name of storage account (cannot contain any other characters than lowercase a-z)"
      }
    },
    "appServicePlanSKU": {
      "type": "string",
      "defaultValue": "Y1",
      "metadata": {
        "description": "SKU of app service plan."
      }
    },
    "appServicePlanName": {
      "type": "string",
      "defaultValue": "[format('{0}-asp', parameters('appName'))]",
      "metadata": {
        "description": "Name of app service plan."
      }
    },
    "appInsightsName": {
      "type": "string",
      "defaultValue": "[format('{0}-appin', parameters('appName'))]",
      "metadata": {
        "description": "Name of app insights."
      }
    },
    "logAnalyticsName": {
      "type": "string",
      "defaultValue": "[format('{0}-log', parameters('appName'))]",
      "metadata": {
        "description": "Name of log analytics workspace."
      }
    },
    "tableName": {
      "type": "string",
      "defaultValue": "costdatatable",
      "metadata": {
        "description": "The name of the Azure Storage Table."
      }
    },
    "queueName": {
      "type": "string",
      "defaultValue": "costdataqueue",
      "metadata": {
        "description": "The name of the Azure Storage Queue."
      }
    },
    "location": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]",
      "metadata": {
        "description": "The location for the deployed resources."
      }
    }
  },
  "variables": {
    "pwshAppName": "[format('{0}-func-pwsh', parameters('appName'))]",
    "csharpAppName": "[format('{0}-func-csharp', parameters('appName'))]",
    "diagnosticProperties": {
      "metrics": [
        {
          "category": "AllMetrics",
          "enabled": true,
          "retentionPolicy": {
            "days": 30,
            "enabled": true
          }
        }
      ],
      "logs": [
        {
          "enabled": true,
          "category": "FunctionAppLogs",
          "retentionPolicy": {
            "days": 30,
            "enabled": true
          }
        }
      ]
    }
  },
  "resources": [
    {
      "type": "Microsoft.Web/serverfarms",
      "apiVersion": "2022-09-01",
      "name": "[parameters('appServicePlanName')]",
      "location": "[parameters('location')]",
      "sku": {
        "name": "[parameters('appServicePlanSKU')]"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces",
      "apiVersion": "2022-10-01",
      "name": "[parameters('logAnalyticsName')]",
      "location": "[parameters('location')]",
      "properties": {
        "sku": {
          "name": "PerGB2018"
        },
        "retentionInDays": 30
      }
    },
    {
      "type": "Microsoft.Insights/components",
      "apiVersion": "2020-02-02",
      "name": "[parameters('appInsightsName')]",
      "location": "[parameters('location')]",
      "kind": "web",
      "properties": {
        "WorkspaceResourceId": "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('logAnalyticsName'))]",
        "Flow_Type": "Bluefield",
        "Application_Type": "web",
        "Request_Source": "rest"
      },
      "dependsOn": [
        "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('logAnalyticsName'))]"
      ]
    },
    {
      "type": "Microsoft.Insights/diagnosticSettings",
      "apiVersion": "2021-05-01-preview",
      "scope": "[format('Microsoft.Web/sites/{0}', variables('csharpAppName'))]",
      "name": "[variables('csharpAppName')]",
      "properties": "[union(createObject('workspaceId', resourceId('Microsoft.OperationalInsights/workspaces', parameters('logAnalyticsName'))), variables('diagnosticProperties'))]",
      "dependsOn": [
        "[resourceId('Microsoft.Web/sites', variables('csharpAppName'))]",
        "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('logAnalyticsName'))]"
      ]
    },
    {
      "type": "Microsoft.Insights/diagnosticSettings",
      "apiVersion": "2021-05-01-preview",
      "scope": "[format('Microsoft.Web/sites/{0}', variables('pwshAppName'))]",
      "name": "[variables('pwshAppName')]",
      "properties": "[union(createObject('workspaceId', resourceId('Microsoft.OperationalInsights/workspaces', parameters('logAnalyticsName'))), variables('diagnosticProperties'))]",
      "dependsOn": [
        "[resourceId('Microsoft.Web/sites', variables('pwshAppName'))]",
        "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('logAnalyticsName'))]"
      ]
    },
    {
      "type": "Microsoft.Storage/storageAccounts",
      "apiVersion": "2022-09-01",
      "name": "[parameters('storageAccountName')]",
      "location": "[parameters('location')]",
      "sku": {
        "name": "Standard_LRS"
      },
      "kind": "StorageV2",
      "properties": {
        "minimumTlsVersion": "TLS1_2",
        "accessTier": "Hot",
        "encryption": {
          "services": {
            "blob": {
              "enabled": true,
              "keyType": "Account"
            },
            "file": {
              "enabled": true,
              "keyType": "Account"
            }
          },
          "keySource": "Microsoft.Storage"
        }
      }
    },
    {
      "type": "Microsoft.Storage/storageAccounts/queueServices",
      "apiVersion": "2022-09-01",
      "name": "[format('{0}/{1}', parameters('storageAccountName'), 'default')]",
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName'))]"
      ]
    },
    {
      "type": "Microsoft.Storage/storageAccounts/tableServices",
      "apiVersion": "2022-09-01",
      "name": "[format('{0}/{1}', parameters('storageAccountName'), 'default')]",
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName'))]"
      ]
    },
    {
      "type": "Microsoft.Storage/storageAccounts/queueServices/queues",
      "apiVersion": "2022-09-01",
      "name": "[format('{0}/{1}/{2}', parameters('storageAccountName'), 'default', parameters('queueName'))]",
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts/queueServices', parameters('storageAccountName'), 'default')]"
      ]
    },
    {
      "type": "Microsoft.Storage/storageAccounts/tableServices/tables",
      "apiVersion": "2022-09-01",
      "name": "[format('{0}/{1}/{2}', parameters('storageAccountName'), 'default', parameters('tableName'))]",
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts/tableServices', parameters('storageAccountName'), 'default')]"
      ]
    },
    {
      "type": "Microsoft.Authorization/roleAssignments",
      "apiVersion": "2022-04-01",
      "name": "[guid(resourceGroup().id, parameters('appName'))]",
      "properties": {
        "roleDefinitionId": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', '72fafb9e-0641-4937-9268-a91bfd8191a3')]",
        "principalId": "[reference(resourceId('Microsoft.Web/sites', variables('csharpAppName')), '2022-09-01', 'full').identity.principalId]",
        "principalType": "ServicePrincipal"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Web/sites', variables('csharpAppName'))]"
      ]
    },
    {
      "type": "Microsoft.Web/sites",
      "apiVersion": "2022-09-01",
      "name": "[variables('csharpAppName')]",
      "location": "[parameters('location')]",
      "kind": "functionapp",
      "identity": {
        "type": "SystemAssigned"
      },
      "properties": {
        "httpsOnly": true,
        "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', parameters('appServicePlanName'))]",
        "siteConfig": {
          "minTlsVersion": "1.2",
          "netFrameworkVersion": "v6.0",
          "appSettings": "[concat(createArray(createObject('name', 'AzureWebJobsStorage', 'value', format('DefaultEndpointsProtocol=https;AccountName={0};AccountKey={1}', parameters('storageAccountName'), listKeys(resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName')), '2022-09-01').keys[0].value)), createObject('name', 'WEBSITE_CONTENTAZUREFILECONNECTIONSTRING', 'value', format('DefaultEndpointsProtocol=https;AccountName={0};AccountKey={1}', parameters('storageAccountName'), listKeys(resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName')), '2022-09-01').keys[0].value)), createObject('name', 'FUNCTIONS_EXTENSION_VERSION', 'value', '~4'), createObject('name', 'FUNCTION_APP_EDIT_MODE', 'value', 'readonly'), createObject('name', 'APPINSIGHTS_INSTRUMENTATIONKEY', 'value', reference(resourceId('Microsoft.Insights/components', parameters('appInsightsName')), '2020-02-02').InstrumentationKey), createObject('name', 'APPLICATIONINSIGHTS_CONNECTION_STRING', 'value', reference(resourceId('Microsoft.Insights/components', parameters('appInsightsName')), '2020-02-02').ConnectionString), createObject('name', 'ApplicationInsightsAgent_EXTENSION_VERSION', 'value', '~2'), createObject('name', 'CostTableName', 'value', parameters('tableName')), createObject('name', 'CostQueueName', 'value', parameters('queueName'))), createArray(createObject('name', 'FUNCTIONS_WORKER_RUNTIME', 'value', 'dotnet'), createObject('name', 'WEBSITE_CONTENTSHARE', 'value', variables('csharpAppName')), createObject('name', 'CostScope', 'value', format('subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, resourceGroup().name))))]"
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Insights/components', parameters('appInsightsName'))]",
        "[resourceId('Microsoft.Web/serverfarms', parameters('appServicePlanName'))]",
        "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName'))]"
      ]
    },
    {
      "type": "Microsoft.Web/sites",
      "apiVersion": "2022-09-01",
      "name": "[variables('pwshAppName')]",
      "location": "[parameters('location')]",
      "kind": "functionapp",
      "properties": {
        "httpsOnly": true,
        "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', parameters('appServicePlanName'))]",
        "siteConfig": {
          "minTlsVersion": "1.2",
          "powerShellVersion": "7.2",
          "appSettings": "[concat(createArray(createObject('name', 'AzureWebJobsStorage', 'value', format('DefaultEndpointsProtocol=https;AccountName={0};AccountKey={1}', parameters('storageAccountName'), listKeys(resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName')), '2022-09-01').keys[0].value)), createObject('name', 'WEBSITE_CONTENTAZUREFILECONNECTIONSTRING', 'value', format('DefaultEndpointsProtocol=https;AccountName={0};AccountKey={1}', parameters('storageAccountName'), listKeys(resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName')), '2022-09-01').keys[0].value)), createObject('name', 'FUNCTIONS_EXTENSION_VERSION', 'value', '~4'), createObject('name', 'FUNCTION_APP_EDIT_MODE', 'value', 'readonly'), createObject('name', 'APPINSIGHTS_INSTRUMENTATIONKEY', 'value', reference(resourceId('Microsoft.Insights/components', parameters('appInsightsName')), '2020-02-02').InstrumentationKey), createObject('name', 'APPLICATIONINSIGHTS_CONNECTION_STRING', 'value', reference(resourceId('Microsoft.Insights/components', parameters('appInsightsName')), '2020-02-02').ConnectionString), createObject('name', 'ApplicationInsightsAgent_EXTENSION_VERSION', 'value', '~2'), createObject('name', 'CostTableName', 'value', parameters('tableName')), createObject('name', 'CostQueueName', 'value', parameters('queueName'))), createArray(createObject('name', 'FUNCTIONS_WORKER_RUNTIME', 'value', 'powershell'), createObject('name', 'WEBSITE_CONTENTSHARE', 'value', variables('pwshAppName'))))]"
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Insights/components', parameters('appInsightsName'))]",
        "[resourceId('Microsoft.Web/serverfarms', parameters('appServicePlanName'))]",
        "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName'))]"
      ]
    }
  ]
}